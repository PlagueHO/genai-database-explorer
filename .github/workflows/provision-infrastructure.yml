name: Provision Infrastructure

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        description: "The environment to validate the application infrastructure for"
        required: true
        type: string
      BUILD_VERSION:
        description: "The version of the build to deploy to the application resources"
        required: true
        type: string
      AZURE_LOCATION:
        description: "The Azure region to deploy the application resources to"
        required: true
        type: string
      AZURE_ENV_NAME:
        description: "The name of the Azure environment"
        required: true
        type: string

    outputs:
      AZURE_RESOURCE_GROUP:
        description: "The Azure resource group name"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_RESOURCE_GROUP }}
      AZURE_PRINCIPAL_ID:
        description: "The Azure principal ID"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_PRINCIPAL_ID }}
      AZURE_PRINCIPAL_ID_TYPE:
        description: "The Azure principal ID type"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_PRINCIPAL_ID_TYPE }}
      LOG_ANALYTICS_WORKSPACE_NAME:
        description: "The Log Analytics workspace name"
        value: ${{ jobs.provision-infrastructure.outputs.LOG_ANALYTICS_WORKSPACE_NAME }}
      LOG_ANALYTICS_RESOURCE_ID:
        description: "The Log Analytics resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.LOG_ANALYTICS_RESOURCE_ID }}
      LOG_ANALYTICS_WORKSPACE_ID:
        description: "The Log Analytics workspace ID"
        value: ${{ jobs.provision-infrastructure.outputs.LOG_ANALYTICS_WORKSPACE_ID }}
      APPLICATION_INSIGHTS_NAME:
        description: "The Application Insights name"
        value: ${{ jobs.provision-infrastructure.outputs.APPLICATION_INSIGHTS_NAME }}
      APPLICATION_INSIGHTS_RESOURCE_ID:
        description: "The Application Insights resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.APPLICATION_INSIGHTS_RESOURCE_ID }}
      APPLICATION_INSIGHTS_INSTRUMENTATION_KEY:
        description: "The Application Insights instrumentation key"
        value: ${{ jobs.provision-infrastructure.outputs.APPLICATION_INSIGHTS_INSTRUMENTATION_KEY }}
      AZURE_AI_SEARCH_NAME:
        description: "The Azure AI Search service name"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_AI_SEARCH_NAME }}
      AZURE_AI_SEARCH_ID:
        description: "The Azure AI Search service resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_AI_SEARCH_ID }}
      AZURE_AI_FOUNDRY_NAME:
        description: "The Azure AI Foundry service name"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_AI_FOUNDRY_NAME }}
      AZURE_AI_FOUNDRY_ID:
        description: "The Azure AI Foundry service resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_AI_FOUNDRY_ID }}
      AZURE_AI_FOUNDRY_ENDPOINT:
        description: "The Azure AI Foundry service endpoint"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_AI_FOUNDRY_ENDPOINT }}
      AZURE_AI_FOUNDRY_RESOURCE_ID:
        description: "The Azure AI Foundry service resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.AZURE_AI_FOUNDRY_RESOURCE_ID }}
      SQL_SERVER_NAME:
        description: "The SQL Server name"
        value: ${{ jobs.provision-infrastructure.outputs.SQL_SERVER_NAME }}
      SQL_SERVER_RESOURCE_ID:
        description: "The SQL Server resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.SQL_SERVER_RESOURCE_ID }}
      SQL_DATABASE_ENDPOINT:
        description: "The SQL Database endpoint"
        value: ${{ jobs.provision-infrastructure.outputs.SQL_DATABASE_ENDPOINT }}
      COSMOS_DB_ACCOUNT_NAME:
        description: "The Cosmos DB account name"
        value: ${{ jobs.provision-infrastructure.outputs.COSMOS_DB_ACCOUNT_NAME }}
      COSMOS_DB_ACCOUNT_RESOURCE_ID:
        description: "The Cosmos DB account resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.COSMOS_DB_ACCOUNT_RESOURCE_ID }}
      COSMOS_DB_ACCOUNT_ENDPOINT:
        description: "The Cosmos DB account endpoint"
        value: ${{ jobs.provision-infrastructure.outputs.COSMOS_DB_ACCOUNT_ENDPOINT }}
      STORAGE_ACCOUNT_NAME:
        description: "The Storage Account name"
        value: ${{ jobs.provision-infrastructure.outputs.STORAGE_ACCOUNT_NAME }}
      STORAGE_ACCOUNT_RESOURCE_ID:
        description: "The Storage Account resource ID"
        value: ${{ jobs.provision-infrastructure.outputs.STORAGE_ACCOUNT_RESOURCE_ID }}
      STORAGE_ACCOUNT_BLOB_ENDPOINT:
        description: "The Storage Account blob endpoint"
        value: ${{ jobs.provision-infrastructure.outputs.STORAGE_ACCOUNT_BLOB_ENDPOINT }}

    secrets:
      AZURE_TENANT_ID:
        description: "The Azure tenant ID to use for authentication to Azure for deployment"
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: "The Azure subscription ID to use for authentication to Azure for deployment"
        required: true
      AZURE_CLIENT_ID:
        description: "The Azure client ID to use for authentication to Azure for deployment"
        required: true
      SQL_SERVER_USERNAME:
        description: "The SQL Server username for the application"
        required: true
      SQL_SERVER_PASSWORD:
        description: "The SQL Server password for the application"
        required: true

jobs:
  provision-infrastructure:
    name: Provision Infrastructure ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ inputs.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ inputs.AZURE_LOCATION }}
      AZURE_PRINCIPAL_ID_TYPE: 'ServicePrincipal'
      SQL_SERVER_USERNAME: ${{ secrets.SQL_SERVER_USERNAME }}
      SQL_SERVER_PASSWORD: ${{ secrets.SQL_SERVER_PASSWORD }}
      AZURE_AI_SEARCH_DEPLOY: 'true'
      COSMOS_DB_DEPLOY: 'true'
      STORAGE_ACCOUNT_DEPLOY: 'true'

    outputs:
      AZURE_RESOURCE_GROUP: ${{ steps.get_infrastructure_outputs.outputs.AZURE_RESOURCE_GROUP }}
      AZURE_PRINCIPAL_ID: ${{ steps.get_infrastructure_outputs.outputs.AZURE_PRINCIPAL_ID }}
      AZURE_PRINCIPAL_ID_TYPE: ${{ steps.get_infrastructure_outputs.outputs.AZURE_PRINCIPAL_ID_TYPE }}
      LOG_ANALYTICS_WORKSPACE_NAME: ${{ steps.get_infrastructure_outputs.outputs.LOG_ANALYTICS_WORKSPACE_NAME }}
      LOG_ANALYTICS_RESOURCE_ID: ${{ steps.get_infrastructure_outputs.outputs.LOG_ANALYTICS_RESOURCE_ID }}
      LOG_ANALYTICS_WORKSPACE_ID: ${{ steps.get_infrastructure_outputs.outputs.LOG_ANALYTICS_WORKSPACE_ID }}
      APPLICATION_INSIGHTS_NAME: ${{ steps.get_infrastructure_outputs.outputs.APPLICATION_INSIGHTS_NAME }}
      APPLICATION_INSIGHTS_RESOURCE_ID: ${{ steps.get_infrastructure_outputs.outputs.APPLICATION_INSIGHTS_RESOURCE_ID }}
      APPLICATION_INSIGHTS_INSTRUMENTATION_KEY: ${{ steps.get_infrastructure_outputs.outputs.APPLICATION_INSIGHTS_INSTRUMENTATION_KEY }}
      AZURE_AI_SEARCH_NAME: ${{ steps.get_infrastructure_outputs.outputs.AZURE_AI_SEARCH_NAME }}
      AZURE_AI_SEARCH_ID: ${{ steps.get_infrastructure_outputs.outputs.AZURE_AI_SEARCH_ID }}
      AZURE_AI_FOUNDRY_NAME: ${{ steps.get_infrastructure_outputs.outputs.AZURE_AI_FOUNDRY_NAME }}
      AZURE_AI_FOUNDRY_ID: ${{ steps.get_infrastructure_outputs.outputs.AZURE_AI_FOUNDRY_ID }}
      AZURE_AI_FOUNDRY_ENDPOINT: ${{ steps.get_infrastructure_outputs.outputs.AZURE_AI_FOUNDRY_ENDPOINT }}
      AZURE_AI_FOUNDRY_RESOURCE_ID: ${{ steps.get_infrastructure_outputs.outputs.AZURE_AI_FOUNDRY_RESOURCE_ID }}
      SQL_SERVER_NAME: ${{ steps.get_infrastructure_outputs.outputs.SQL_SERVER_NAME }}
      SQL_SERVER_RESOURCE_ID: ${{ steps.get_infrastructure_outputs.outputs.SQL_SERVER_RESOURCE_ID }}
      SQL_DATABASE_ENDPOINT: ${{ steps.get_infrastructure_outputs.outputs.SQL_DATABASE_ENDPOINT }}
      COSMOS_DB_ACCOUNT_NAME: ${{ steps.get_infrastructure_outputs.outputs.COSMOS_DB_ACCOUNT_NAME }}
      COSMOS_DB_ACCOUNT_RESOURCE_ID: ${{ steps.get_infrastructure_outputs.outputs.COSMOS_DB_ACCOUNT_RESOURCE_ID }}
      COSMOS_DB_ACCOUNT_ENDPOINT: ${{ steps.get_infrastructure_outputs.outputs.COSMOS_DB_ACCOUNT_ENDPOINT }}
      STORAGE_ACCOUNT_NAME: ${{ steps.get_infrastructure_outputs.outputs.STORAGE_ACCOUNT_NAME }}
      STORAGE_ACCOUNT_RESOURCE_ID: ${{ steps.get_infrastructure_outputs.outputs.STORAGE_ACCOUNT_RESOURCE_ID }}
      STORAGE_ACCOUNT_BLOB_ENDPOINT: ${{ steps.get_infrastructure_outputs.outputs.STORAGE_ACCOUNT_BLOB_ENDPOINT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2.2.0

      - name: Authenticate azd (Federated Credentials)
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Provision Infrastructure
        run: azd provision --no-prompt

      - name: Get Output Endpoints
        id: get_infrastructure_outputs
        run: |
          # Get all outputs from azd env get-values and pass them through directly
          echo "Getting azd environment outputs..."
          AZD_OUTPUTS=$(azd env get-values)
          
          # Define all the output variables we want to extract from azd outputs
          OUTPUT_VARS=(
            "AZURE_RESOURCE_GROUP"
            "AZURE_PRINCIPAL_ID"
            "AZURE_PRINCIPAL_ID_TYPE"
            "LOG_ANALYTICS_WORKSPACE_NAME"
            "LOG_ANALYTICS_RESOURCE_ID"
            "LOG_ANALYTICS_WORKSPACE_ID"
            "APPLICATION_INSIGHTS_NAME"
            "APPLICATION_INSIGHTS_RESOURCE_ID"
            "APPLICATION_INSIGHTS_INSTRUMENTATION_KEY"
            "AZURE_AI_SEARCH_NAME"
            "AZURE_AI_SEARCH_ID"
            "AZURE_AI_FOUNDRY_NAME"
            "AZURE_AI_FOUNDRY_ID"
            "AZURE_AI_FOUNDRY_ENDPOINT"
            "AZURE_AI_FOUNDRY_RESOURCE_ID"
            "SQL_SERVER_NAME"
            "SQL_SERVER_RESOURCE_ID"
            "SQL_DATABASE_ENDPOINT"
            "COSMOS_DB_ACCOUNT_NAME"
            "COSMOS_DB_ACCOUNT_RESOURCE_ID"
            "COSMOS_DB_ACCOUNT_ENDPOINT"
            "STORAGE_ACCOUNT_NAME"
            "STORAGE_ACCOUNT_RESOURCE_ID"
            "STORAGE_ACCOUNT_BLOB_ENDPOINT"
          )
          
          # Extract and set each output variable directly from azd outputs
          for VAR_NAME in "${OUTPUT_VARS[@]}"; do
            VAR_VALUE=$(echo "$AZD_OUTPUTS" | grep "^${VAR_NAME}=" | cut -d'=' -f2- | xargs)
            echo "$VAR_NAME=$VAR_VALUE" >> $GITHUB_OUTPUT
            echo "Set $VAR_NAME=$VAR_VALUE"
          done
